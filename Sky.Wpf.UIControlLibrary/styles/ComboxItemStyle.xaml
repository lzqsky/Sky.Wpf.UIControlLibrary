<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:com="clr-namespace:Sky.Wpf.UIControlLibrary.common"
                    xmlns:conver="clr-namespace:Sky.Wpf.UIControlLibrary.converters"
                    xmlns:ctrl="clr-namespace:Sky.Wpf.UIControlLibrary.control" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Sky.Wpf.UIControlLibrary;component/Styles/ControlStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <conver:TrueToFalseConverter x:Key="truetofalseConvert"></conver:TrueToFalseConverter>
    
    <!--下拉条目样式-->
    <Style TargetType="{x:Type ComboBoxItem}" x:Key="ComboBoxItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="{DynamicResource size.padding.default}"/>
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                        <Border x:Name="ItemBackground" IsHitTestVisible="False" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource brush.item.select.background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource brush.item.mouseover.background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--水印：local:ControlAttachProperty.Placeholder-->
    <!--Label区域：local:ControlAttachProperty.LabelTemplate ，local:ControlAttachProperty.Label-->
    <!--附加内容区域：local:ControlAttachProperty.AttachContent-->
    <!--圆角：local:ControlAttachProperty.CornerRadius-->
    <!--local:ControlAttachProperty.MouseOverBorderBrush-->
    <!--local:ControlAttachProperty.FocusBorderBrush-->
    <!--local:ControlAttachProperty.FocusBackground-->
    <Style TargetType="{x:Type ComboBox}" x:Key="combo.default" BasedOn="{StaticResource base.style}">    
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />  
        <Setter Property="com:AttachProperty.FocusBorderBrush" Value="{DynamicResource brush.text.focus.borderbrush}" />
        <Setter Property="com:AttachProperty.MouseOverBorderBrush" Value="{DynamicResource brush.text.focus.borderbrush}" />
        <Setter Property="com:AttachProperty.FocusBackground" Value="Transparent" /> 
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" /> 
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding com:AttachProperty.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" >
                            <Border.Effect>
                                <DropShadowEffect x:Name="dse" BlurRadius="8" 
                                                  ShadowDepth="0" 
                                                  Color="{DynamicResource color.text.selection}" Opacity="0"/>
                            </Border.Effect>
                            <Rectangle Height="1" VerticalAlignment="Top" Stroke="#000000" Opacity="0.1">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1"/>
                                </Rectangle.Effect>
                            </Rectangle>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions> 
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                          
                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Panel.ZIndex="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <ContentControl VerticalAlignment="Center" VerticalContentAlignment="Center" Template="{TemplateBinding com:AttachProperty.AttachContent}" />
                            </Border>
                            <!--下拉按钮-->
                            <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False" 
                                          Style="{DynamicResource btn.toggle}" 
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                         Margin="5,2,5,2" 
                                         Grid.Column="0"  Grid.ColumnSpan="3" 
                                         IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource truetofalseConvert},Mode=OneWay}"
                                         />
                            <!--水印   -->
                            <Border Grid.Column="0">
                                <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" Text="{TemplateBinding com:AttachProperty.Placeholder}" 
                                        Foreground="{TemplateBinding Foreground}"
                                           IsHitTestVisible="False" Opacity="0.4" HorizontalAlignment="Left" TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                            </Border>
                            <!--主内容区域-->
                            <Grid Grid.Column="0" x:Name="ContentSite" Margin="2 0 0 0" >
                                <ContentPresenter x:Name="PART_SelectedItem" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="2,0,2,0" 
                                                  IsHitTestVisible="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <!--文本编辑 -->
                                <TextBox  x:Name="PART_EditableTextBox" Visibility="Collapsed" BorderThickness="0"
                                          HorizontalAlignment="Stretch" Background="Transparent"  
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          
                                          IsHitTestVisible="True"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsReadOnly="{TemplateBinding IsReadOnly}" 
                                          FontFamily="{TemplateBinding FontFamily}" 
                                          Foreground="{TemplateBinding Foreground}"
                                          Padding="{TemplateBinding Padding}"
                                          Text="{TemplateBinding Text}" 
                                          FontSize="{TemplateBinding FontSize}" />
                            </Grid>
                        </Grid>
                        <!--弹出下拉控件-->
                        <!--PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"  -->
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Slide"
                               Placement="Bottom">
                            
                            <Grid x:Name="PopupGrid"
                                  Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Border x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" 
                                        HorizontalAlignment="Stretch"
                                        Height="Auto" BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{DynamicResource brush.combox.popup.background}">
                                </Border>
                                <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--1.显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--编辑模式-->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="2" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(com:AttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter  Property="BorderBrush" Value="{Binding Path=(com:AttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(com:AttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.5"></Setter>
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:3" To="1" Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="Opacity"/>
                                        
                                        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="PopupGrid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="20"/>
                                        </DoubleAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions> 
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Combox包含清除Text按钮的样式-->
    <Style TargetType="{x:Type ComboBox}" x:Key="combo.clear" BasedOn="{StaticResource combo.default}">
        <Setter Property="com:AttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button com:AttachProperty.IconString="{DynamicResource str.close}"  
                                     com:AttachProperty.MouseOverForeground="{DynamicResource brush.text.focus.borderbrush}"
                                     Style="{DynamicResource btn.icondefault}"  Width="Auto"
                                     IsTabStop="False" Cursor="Arrow"  
                                     IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}, Converter={StaticResource truetofalseConvert},Mode=OneWay}"
                                     CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}" 
                                     com:AttachCommand.IsClearTextProperty="True"                                     
                                     />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>